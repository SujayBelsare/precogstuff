Let's start with the initial string "BEDFE". The available transitions are:
1) "E"->"FD"
2) "FFD"->"BE"
3) "BFDDBFD"->""

We want to reach an empty string. The only way to get to the empty string is through rule 3, "BFDDBFD"->"". So, our goal is to transform "BEDFE" into "BFDDBFD".

Let's try applying rule 1 to the first E:
"BEDFE" -> "BDFDFE"
Now, let's apply rule 1 to the second E:
"BDFDFE" -> "BDFDFFD"
We have an "FFD" substring. Let's apply rule 2:
"BDFDFFD" -> "BDFDBE"
This doesn't seem to be going in the right direction. Let's try a different approach.

Let's apply rule 1 to the second E *first*:
"BEDFE" -> "BEDFD"
Now, apply rule 1 to the first E:
"BEDFD" -> "BFDDFD"
Now we have "BFDDFD". We need one more "B" to make "BFDDBFD". Let's rethink.

Let's look at the target: "BFDDBFD". We currently have "BEDFE".
Apply rule 1 to both E's:
"BEDFE" -> "BDFDFE" -> "BDFDFFD"
Applying rule 2 gives "BDFDBE" which is not helpful.

Let's try applying rule 1 to the second E first:
"BEDFE" -> "BEDFD"
Now, apply rule 1 to the first E:
"BEDFD" -> "BFDDFD"
We want "BFDDBFD". We have "BFDDFD". We need another B.

"BEDFE"
Apply rule 1 to the first E:
"BEDFE" -> "BDFDFE"
Apply rule 1 to the second E:
"BDFDFE" -> "BDFDFFD"
Apply rule 2 to FFD:
"BDFDFFD" -> "BDFDBE"
This doesn't seem to get closer.

Let's try replacing the *second* E first:
"BEDFE" -> "BEDFD"
Then replace the first E:
"BEDFD" -> "BFDDFD"
We want "BFDDBFD".

"BEDFE"
1) E -> FD
2) FFD -> BE
3) BFDDBFD -> ""

Let's try to get two FFD's.
"BEDFE" -> "BDFDFE" (rule 1)
"BDFDFE" -> "BDFDFFD" (rule 1)
"BDFDFFD" -> "BDFDBE" (rule 2)

Let's rethink. We need BFDDBFD.
"BEDFE"
Let's convert the first E to FD.
"BEDFE" -> "BDFDFE" [1]
Now, convert the second E to FD.
"BDFDFE" -> "BDFDFFD" [1]
Now, convert FFD to BE.
"BDFDFFD" -> "BDFDBE" [2]
This is not getting us anywhere.

Let's try another way.
"BEDFE"
Convert second E to FD:
"BEDFE" -> "BEDFD" [1]
Convert first E to FD:
"BEDFD" -> "BFDDFD" [1]
We need "BFDDBFD".

Let's analyze the differences. We have "BFDDFD" and we want "BFDDBFD".
We need the second D to be a B.

"BEDFE"
Apply rule 1 to E:
"BEDFE" -> "BDFDFE" [1]
Apply rule 1 to E:
"BDFDFE" -> "BDFDFFD" [1]
Apply rule 2 to FFD:
"BDFDFFD" -> "BDFDBE" [2]

JW HELP!
STOP